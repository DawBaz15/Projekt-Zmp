openapi: 3.0.0
info:
  title: Warehouse API
  description: Warehouse API
  version: 1.0

servers:
  - url: http://localhost:8080/api
    description: Docker

tags:
  - name: "User"
    description: "Every endpoint regarding the user table"
  - name: "Admin"
    description: "Every endpoint regarding the admin table"
  - name: "Item"
    description: "Every endpoint regarding the item table"
  - name: "Stock"
    description: "Every endpoint regarding the stock table"
  - name: "Web/Desktop app"
    description: "Grouped endpoints that should be used in the web and desktop apps"
  - name: "Mobile app"
    description: "Grouped endpoints that should be used in the mobile app"

paths:
  /user/login:
    post:
      summary: Returns a login token for user accounts
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Email
                - Password
                - Google2fa
              properties:
                Email:
                  type: string
                  description: Email given by user
                Password:
                  type: string
                  description: Password given by user
                Google2fa:
                  type: string
                  description: Google2fa token from the authenticator app
      responses:
        "200":
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                    description: Account token used for authorization
        "400":
          description: Bad request
        "403":
          description: Account is not active
      tags:
        - "User"
        - "Mobile app"

  /user/reset:
    put:
      summary: Resets user's password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Token
              properties:
                Token:
                  type: string
                  description: User token for authorization
      responses:
        "200":
          description: Reset initiated
        "401":
          description: Bad token
      tags:
        - "User"
        - "Mobile app"

  /user/index:
    get:
      summary: Fetch all users details
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Token
              properties:
                Token:
                  type: string
                  description: Admin token for authorization
      responses:
        "200":
          description: Array fetched
        "400":
          description: Bad request
        "401":
          description: Bad token
      tags:
        - "User"
        - "Web/Desktop app"

  /user/create:
    post:
      summary: Creates a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Token
                - Email
                - Phone
                - Name
                - Surname
              properties:
                Token:
                  type: string
                  description: Admin token for authorization
                Email:
                  type: string
                  description: User's email
                Phone:
                  type: string
                  description: User's phone number
                Name:
                  type: string
                  description: User's name
                Surname:
                  type: string
                  description: User's surname
      responses:
        "201":
          description: User created
        "400":
          description: Bad request
        "401":
          description: Bad token
      tags:
        - "User"
        - "Web/Desktop app"

  /user/modify:
    put:
      summary: Modifies an existing user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Token
                - UserId
              properties:
                Token:
                  type: string
                  description: Admin token for authorization
                UserId:
                  type: integer
                  description: ID of user to modify
                Email:
                  type: string
                  description: New email of user, if empty it stays the same
                Phone:
                  type: string
                  description: New phone of user, if empty it stays the same
                Name:
                  type: string
                  description: New name of user, if empty it stays the same
                Surname:
                  type: string
                  description: New surname of user, if empty it stays the same
                AccountActive:
                  type: boolean
                  description: Changes state of account, false = inactive, true = active
      responses:
        "200":
          description: User modified
        "400":
          description: Bad request
        "401":
          description: Bad token
        "404":
          description: User not found
      tags:
        - "User"
        - "Web/Desktop app"

  /admin/login:
    post:
      summary: Returns a login token for admin accounts
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Email
                - Password
                - Google2fa
              properties:
                Email:
                  type: string
                  description: Email given by user
                Password:
                  type: string
                  description: Password given by user
                Google2fa:
                  type: string
                  description: Google2fa token from the authenticator app
      responses:
        "200":
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: Account token used for authorization
        "401":
          description: Bad login
        "403":
          description: Account is not active
      tags:
        - "Admin"
        - "Web/Desktop app"

  /admin/reset:
    put:
      summary: Resets admin's password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Token
              properties:
                Token:
                  type: string
                  description: Admin token for authorization
      responses:
        "200":
          description: Reset initiated
        "401":
          description: Bad token
      tags:
        - "Admin"
        - "Web/Desktop app"

  /admin/notification:
    get:
      summary: Pushes a notification to admin
      tags:
        - "Admin"
        - "Web/Desktop app"

  /item/create:
    post:
      summary: Creates a new item
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Token
                - Name
              properties:
                Token:
                  type: string
                  description: Admin token for authorization
                Name:
                  type: string
                  description: Name of new item
      responses:
        "200":
          description: Item created
        "400":
          description: Bad request
        "401":
          description: Bad token
      tags:
        - "Item"
        - "Web/Desktop app"

  /item/modify:
    put:
      summary: Modifies an existing item
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Token
                - ID
              properties:
                Token:
                  type: string
                  description: Admin token for authorization
                ID:
                  type: integer
                  description: ID of modified item
                Name:
                  type: string
                  description: New name of item, if empty then it stays the same

      responses:
        "200":
          description: Item modified
        "400":
          description: Bad request
        "401":
          description: Bad token
        "404":
          description: Item not found
      tags:
        - "Item"
        - "Web/Desktop app"

  /item/index:
    get:
      summary: Lists all items
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Token
              properties:
                Token:
                  type: string
                  description: User or admin token for authorization
      responses:
        "200":
          description: Array fetched
        "401":
          description: Bad token
      tags:
        - "Item"
        - "Web/Desktop app"
        - "Mobile app"

  /stock/add:
    post:
      summary: Add items to stock
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Token
                - ProductID
                - Amount
                - Location
              properties:
                Token:
                  type: string
                  description: User token for authorization
                ProductID:
                  type: integer
                  description: ID of item added to stock
                Amount:
                  type: integer
                  description: Amount of item getting added
                Location:
                  type: string
                  description: Physical location of stock in the building
      responses:
        "200":
          description: Stock added
        "400":
          description: Bad request
        "401":
          description: Bad token
        "404":
          description: Item not found
      tags:
        - "Stock"
        - "Mobile app"

  /stock/locate:
    get:
      summary: Retrieve physical location of items in stock
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Token
                - ProductID
              properties:
                Token:
                  type: string
                  description: User token for authorization
                ProductID:
                  type: integer
                  description: ID of item to search
      responses:
        "200":
          description: Search successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  location:
                    type: string
                    description: Location of searched item
                  amount:
                    type: integer
                    description: Amount of item in location
        "400":
          description: Bad request
        "401":
          description: Bad token
      tags:
        - "Stock"
        - "Mobile app"

  /stock/index:
    get:
      summary: Lists all available stock
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Token
              properties:
                Token:
                  type: string
                  description: Admin token for authorization
      responses:
        "200":
          description: Array fetched
        "401":
          description: Bad token
      tags:
        - "Stock"
        - "Web/Desktop app"

  /stock/modify:
    put:
      summary: Modifies existing stock
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Token
                - ID
              properties:
                Token:
                  type: string
                  description: Admin token for authorization
                ID:
                  type: integer
                  description: ID of modified stock
                ProductID:
                  type: integer
                  description: New item ID, if empty then it stays the same
                Amount:
                  type: integer
                  description: New amount of item, if empty then it stays the same
                Location:
                  type: string
                  description: New location of item, if empty then it stays the same
      responses:
        "200":
          description: Stock modified
        "400":
          description: Bad request
        "401":
          description: Bad token
        "404":
          description: Stock not found
      tags:
        - "Stock"
        - "Web/Desktop app"
